# # =========================
# # Stage 1: Build Angular Frontend
# # =========================
# FROM node:18-alpine AS frontend-build
# WORKDIR /app/frontend

# # Copy package files and install dependencies
# COPY frontend/common-queue-frontend/package*.json ./
# RUN npm install --legacy-peer-deps

# # Copy source code and build
# COPY frontend/common-queue-frontend/ ./
# RUN npm run build --prod

# # =========================
# # Stage 2: Build Spring Boot Backend
# # =========================
# FROM maven:3.9.3-eclipse-temurin-17 AS backend-build
# WORKDIR /app/backend

# # Copy Maven config and source
# COPY backend/pom.xml ./
# COPY backend/src/ ./src/

# # Package the Spring Boot application
# RUN mvn clean package -DskipTests

# # =========================
# # Stage 3: Development Runtime
# # =========================
# FROM eclipse-temurin:17-jdk-jammy AS runtime

# ENV MYSQL_DATABASE="common_queue"
# ENV MYSQL_USER="myuser001"
# ENV SPRING_DATASOURCE_USERNAME="projectuser"
# ENV SPRING_DATASOURCE_URL="jdbc:mysql://127.0.0.1:3306/common_queue?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Singapore"

# # Install required packages (keeping it simple for dev)
# RUN apt-get update && apt-get install -y \
#     nginx \
#     mariadb-server \
#     mariadb-client \
#     curl \
#     vim \
#     && rm -rf /var/lib/apt/lists/*

# WORKDIR /app

# # Copy backend JAR
# COPY --from=backend-build /app/backend/target/*.jar ./app.jar

# # Copy built frontend
# COPY --from=frontend-build /app/frontend/dist/common-queue-frontend /var/www/html

# # Simple Nginx configuration for dev
# RUN echo 'server { \
#     listen 80; \
#     root /var/www/html; \
#     index index.html; \
#     location / { \
#         try_files $uri $uri/ /index.html; \
#     } \
#     location /api/ { \
#         proxy_pass http://localhost:8080/; \
#         proxy_set_header Host $host; \
#         proxy_set_header X-Real-IP $remote_addr; \
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \
#     } \
# }' > /etc/nginx/sites-available/default

# # MariaDB setup for dev
# RUN mkdir -p /var/lib/mysql /var/run/mysqld \
#     && chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \
#     && chmod 777 /var/run/mysqld \
#     && mysql_install_db --user=mysql --datadir=/var/lib/mysql

# # Copy database initialization script
# COPY dbscript/dbscript.txt /docker-entrypoint-initdb.d/dbscript.sql

# # Copy entrypoint
# COPY entrypoint.sh /entrypoint.sh
# RUN chmod +x /entrypoint.sh

# # Expose ports
# EXPOSE 80 8080 3306

# # Start all services
# CMD ["/entrypoint.sh"]