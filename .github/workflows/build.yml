name: Combined Security Scan (Snyk + SonarQube)
on:
  push:
    branches: [main, develop, feature-jason]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
  schedule:
    - cron: '0 0 * * 1'

jobs:
  security-scans:
    name: Security Scans
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Build project FIRST (this creates target/ directory)
      - name: Build with Maven
        run: mvn -f backend/pom.xml clean install -DskipTests -s ./tempSettings.xml

      # ✅ CHANGE 1: Navigate to backend directory for Snyk
      - name: Run Snyk Security Scan
        working-directory: ./backend  # ✅ ADD THIS
        uses: snyk/actions/maven@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: |
            --severity-threshold=high
            --fail-on=upgradable
            --scan-all-unmanaged
            --project-name=${{ github.repository }}

      # ✅ CHANGE 2: Navigate to backend directory for Snyk Monitor
      - name: Snyk Monitor
        if: github.event_name == 'push'
        working-directory: ./backend  # ✅ ADD THIS
        uses: snyk/actions/maven@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
          args: |
            --project-name=${{ github.repository }}
            --remote-repo-url=${{ github.repositoryUrl }}

      # ✅ CHANGE 3: Navigate to backend directory for SonarQube
      - name: Run SonarQube Analysis
        working-directory: ./backend  # ✅ ADD THIS
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=kaldrake_NUSISS_practiceProject \
          -Dsonar.java.binaries=target/classes \
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml